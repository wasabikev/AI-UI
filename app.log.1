2023-12-06 13:30:47,480 - app - ERROR - Exception on /api/conversations [GET]
Traceback (most recent call last):
  File "C:\Python311\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask_cors\extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\Documents\~LLMS and AI\chatbot\app.py", line 95, in get_conversations
    conversations = Conversation.query.order_by(Conversation.updated_at.desc()).all()
                    ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\flask_sqlalchemy\model.py", line 30, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 273, in __init__
    self._set_entities(entities)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 282, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 283, in <listcomp>
    coercions.expect(
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\langhelpers.py", line 1256, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4198, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4235, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Conversation(conversation)]'. Original exception was: When initializing mapper Mapper[Conversation(conversation)], expression 'CodeAbstract' failed to locate a name ('CodeAbstract'). If this is a class name, consider adding this relationship() to the <class 'models.Conversation'> class after both dependent classes have been defined.
2023-12-06 13:30:48,839 - app - ERROR - Exception on /api/conversations [GET]
Traceback (most recent call last):
  File "C:\Python311\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask_cors\extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\Documents\~LLMS and AI\chatbot\app.py", line 95, in get_conversations
    conversations = Conversation.query.order_by(Conversation.updated_at.desc()).all()
                    ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\flask_sqlalchemy\model.py", line 30, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 273, in __init__
    self._set_entities(entities)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 282, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 283, in <listcomp>
    coercions.expect(
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\langhelpers.py", line 1256, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4198, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4235, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[Conversation(conversation)]'. Original exception was: When initializing mapper Mapper[Conversation(conversation)], expression 'CodeAbstract' failed to locate a name ('CodeAbstract'). If this is a class name, consider adding this relationship() to the <class 'models.Conversation'> class after both dependent classes have been defined.
2023-12-06 13:34:52,961 - app - INFO - Received model: gpt-4-0613
2023-12-06 13:34:52,963 - app - INFO - Received temperature: 0.7
2023-12-06 13:34:52,968 - app - INFO - Fetched conversation with id 167 from provided ID/session.
2023-12-06 13:34:52,970 - app - INFO - Sending request to OpenAI: {'model': 'gpt-4-0613', 'messages': [{'content': 'You are a knowledgeable assistant that specializes in critical thinking and analysis.', 'role': 'system'}, {'content': 'Provide a test sentence please', 'role': 'user'}, {'content': '"Despite the heavy rains, the farmer decided to plant the seeds, believing that the weather forecast predicting sunnier days ahead was accurate."', 'role': 'assistant'}, {'role': 'user', 'content': 'another test sentence please'}], 'temperature': 0.7}
2023-12-06 13:34:54,942 - app - INFO - Response from OpenAI: {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "\"Although the new restaurant in town received glowing reviews, Sarah remained skeptical until she could try their food herself.\"",
        "role": "assistant"
      }
    }
  ],
  "created": 1701898493,
  "id": "chatcmpl-8StpdE4IMaT7LMHPMpjkOuSwA1jBz",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "system_fingerprint": null,
  "usage": {
    "completion_tokens": 22,
    "prompt_tokens": 68,
    "total_tokens": 90
  }
}
2023-12-06 13:35:30,155 - app - INFO - Received model: gpt-3.5-turbo-0613
2023-12-06 13:35:30,157 - app - INFO - Received temperature: 0.7
2023-12-06 13:35:30,158 - app - INFO - Sending request to OpenAI: {'model': 'gpt-3.5-turbo-0613', 'messages': [{'role': 'system', 'content': "You are a knowledgeable assistant that specializes in IT operations. Please provide \n        accurate and factual information, explaining your reasoning step-by-step where possible. Do not \n        guess or make things up. If you're unsure about something, it's important to say so. Try to provide \n        sources or references to your knowledge wherever possible. You should also reflect on your answer and \n        consider any possible implications that could result in instability or disruption to production systems.\n        I will provide a troubleshooting or IT scenario. You will then provide feedback or insights on how to proceed."}, {'role': 'user', 'content': 'How to uninstall an app when the traditioanl uninstaller is not working?'}], 'temperature': 0.7}
