2023-11-26 08:33:00,200 - app - INFO - Response from OpenAI: {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "Certainly, here's a test message taking into account critical thinking and analysis:\n\n\"The adoption of artificial intelligence in various fields is steadily increasing. While this technological advancement bodes well for efficiency and productivity, it's crucial to critically analyze its implications on our society and the labor market. Questions arise about job displacement due to automation and issues about privacy and security. Consequently, it's essential to establish policies that ensure fair use of AI, promote continuous learning for workers, and safeguard our privacy rights. This step requires decision-makers to keep their perspectives informed, rational, and well-balanced to maximize the benefits of AI technology while mitigating its potential risks.\"",
        "role": "assistant"
      }
    }
  ],
  "created": 1701016366,
  "id": "chatcmpl-8PCLm1H9EcDCsoI9kg1FwrYpoDHHb",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "usage": {
    "completion_tokens": 128,
    "prompt_tokens": 29,
    "total_tokens": 157
  }
}
2023-11-26 08:37:22,380 - app - INFO - Received model: gpt-4-0613
2023-11-26 08:37:22,382 - app - INFO - Received temperature: 0.3
2023-11-26 08:37:22,383 - app - INFO - Sending request to OpenAI: {'model': 'gpt-4-0613', 'messages': [{'role': 'system', 'content': 'You are a knowledgeable assistant that specializes in critical thinking and analysis.'}, {'role': 'user', 'content': 'Please provide a test sentence'}], 'temperature': 0.3}
2023-11-26 08:37:23,858 - app - INFO - Response from OpenAI: {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "\"The rapid development of technology has significantly impacted various sectors of society, from education to healthcare.\"",
        "role": "assistant"
      }
    }
  ],
  "created": 1701016636,
  "id": "chatcmpl-8PCQ8AykmCtkbluwBYCd5D4MTkW96",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "usage": {
    "completion_tokens": 18,
    "prompt_tokens": 29,
    "total_tokens": 47
  }
}
2023-11-26 08:37:57,437 - app - INFO - Received model: gpt-4-0613
2023-11-26 08:37:57,439 - app - INFO - Received temperature: 1
2023-11-26 08:37:57,441 - app - INFO - Sending request to OpenAI: {'model': 'gpt-4-0613', 'messages': [{'role': 'system', 'content': 'You are a knowledgeable assistant that specializes in critical thinking and analysis.'}, {'role': 'user', 'content': 'Please provide a test sentence'}], 'temperature': 1}
2023-11-26 08:37:59,762 - app - INFO - Response from OpenAI: {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "\"Despite recognizing the profound health impact of junk food, the government has taken little action to reduce its consumption, revealing a disconnect between public health interests and policymaking.\"",
        "role": "assistant"
      }
    }
  ],
  "created": 1701016671,
  "id": "chatcmpl-8PCQhfyzUfMxyBXBj8qCQOQOHMQ8L",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "usage": {
    "completion_tokens": 33,
    "prompt_tokens": 29,
    "total_tokens": 62
  }
}
2023-12-06 13:16:42,585 - app - INFO - Received model: gpt-4-0613
2023-12-06 13:16:42,587 - app - INFO - Received temperature: 0.7
2023-12-06 13:16:42,589 - app - INFO - Sending request to OpenAI: {'model': 'gpt-4-0613', 'messages': [{'role': 'system', 'content': 'You are a knowledgeable assistant that specializes in critical thinking and analysis.'}, {'role': 'user', 'content': 'Provide a test sentence please'}], 'temperature': 0.7}
2023-12-06 13:16:46,399 - app - INFO - Response from OpenAI: {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "content": "\"Despite the heavy rains, the farmer decided to plant the seeds, believing that the weather forecast predicting sunnier days ahead was accurate.\"",
        "role": "assistant"
      }
    }
  ],
  "created": 1701897403,
  "id": "chatcmpl-8StY3TrRohssotYC8V3Qyz38i8bF7",
  "model": "gpt-4-0613",
  "object": "chat.completion",
  "system_fingerprint": null,
  "usage": {
    "completion_tokens": 27,
    "prompt_tokens": 29,
    "total_tokens": 56
  }
}
2023-12-06 13:30:40,849 - app - ERROR - Exception on /api/conversations [GET]
Traceback (most recent call last):
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\clsregistry.py", line 515, in _resolve_name
    rval = d[token]
           ~^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_collections.py", line 346, in __missing__
    self[key] = val = self.creator(key)
                      ^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\clsregistry.py", line 483, in _access_cls
    return self.fallback[key]
           ~~~~~~~~~~~~~^^^^^
KeyError: 'CodeAbstract'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Python311\Lib\site-packages\flask\app.py", line 2190, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1486, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask_cors\extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1484, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python311\Lib\site-packages\flask\app.py", line 1469, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\Documents\~LLMS and AI\chatbot\app.py", line 95, in get_conversations
    conversations = Conversation.query.order_by(Conversation.updated_at.desc()).all()
                    ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\flask_sqlalchemy\model.py", line 30, in __get__
    return cls.query_class(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 273, in __init__
    self._set_entities(entities)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 282, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\query.py", line 283, in <listcomp>
    coercions.expect(
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\coercions.py", line 406, in expect
    insp._post_inspect
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\langhelpers.py", line 1256, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2707, in _post_inspect
    self._check_configure()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2386, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4198, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 4239, in _do_configure_registries
    mapper._post_configure_properties()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\mapper.py", line 2403, in _post_configure_properties
    prop.init()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\interfaces.py", line 578, in init
    self.do_init()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\relationships.py", line 1633, in do_init
    self._setup_entity()
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\relationships.py", line 1850, in _setup_entity
    self._clsregistry_resolve_name(argument)(),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\clsregistry.py", line 519, in _resolve_name
    self._raise_for_name(name, err)
  File "C:\Users\kevina\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\clsregistry.py", line 500, in _raise_for_name
    raise exc.InvalidRequestError(
sqlalchemy.exc.InvalidRequestError: When initializing mapper Mapper[Conversation(conversation)], expression 'CodeAbstract' failed to locate a name ('CodeAbstract'). If this is a class name, consider adding this relationship() to the <class 'models.Conversation'> class after both dependent classes have been defined.
